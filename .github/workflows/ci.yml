name: Build, run tests, code linting

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Allows you to try different .NET versions for version coverage.
        dotnet-version: [8.0]
        
    steps:
      - uses: actions/checkout@v4
      - name: Checkout repository
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install dependencies
        run: dotnet restore
        
      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.4.8
        
      - name: Build
        run: dotnet build --no-restore
    
      - name: Run tests with coverage
        run: |
          dotnet test \
            --no-build \
            --collect:"XPlat Code Coverage" \
            --results-directory ./TestResults \

      - name: Generate HTML report
        if: always()
        run: |
          reportgenerator -reports:./TestResults/**/coverage.cobertura.xml -targetdir:CoverageReport -reporttypes:'TextSummary'
          
      - name: Coverage summary
        run: cat ./CoverageReport/Summary.txt
        
      - name: Fail if coverage is below threshold
        run: |
          threshold=80
          actual=$(grep -Po 'Line coverage:\s*\K[\d.]+(?=%)' CoverageReport/Summary.txt)
          echo "Actual line coverage: $actual%"
          if (( $(echo "$actual < $threshold" | bc -l) )); then
            echo "❌ Coverage $actual% is below threshold $threshold%"
            exit 1
          else
            echo "✅ Coverage $actual% meets or exceeds threshold $threshold%"
            exit 1
          fi
